/**
 * @file Logger.h
 * @brief Определение класса Logger для ведения логов приложения.
 *
 * Этот файл содержит определение класса Logger, который отвечает за
 * запись логов в указанный файл.
 * @author Мочалов Ю.А.
 * @version 1.0
 * @date 24.12.2024
 * @copyright ИБСТ ПГУ
 */
#pragma once

#include "Errors.h"

#include <chrono>
#include <fstream>
#include <iostream>
#include <stdexcept>
#include <string>
#include <time.h>

using namespace std;

/**
 * @class Logger
 * @brief Класс для ведения логов приложения.
 *
 * Класс Logger предоставляет функциональность для записи сообщений в
 * лог-файл с временными метками.
 */
class Logger {
private:
  /**
   * @brief Получение текущей локальной даты и времени в строковом формате.
   *
   * Этот метод возвращает строку с текущей локальной датой и временем.
   *
   * @param s Формат строки для даты и времени.
   * @return Строка с текущей датой и временем.
   */
  static string getLocalDateTime(string s);

  string pathLogFile; ///< Путь к файлу лога.

public:
  /**
   * @brief Запись сообщения в лог-файл.
   *
   * Этот метод записывает переданное сообщение в лог-файл,
   * добавляя к нему временную метку.
   *
   * @param s Сообщение для записи в лог.
   * @return Возвращает 0 при успешной записи, иначе -1.
   */
  int writelog(string s);

  /**
   * @brief Установка пути к файлу лога.
   *
   * Этот метод устанавливает путь к файлу, в который будут записываться логи.
   *
   * @param pathFile Путь к файлу лога.
   * @return Возвращает 0 при успешном установлении пути, иначе -1.
   */
  int setLogPath(string pathFile);

  /**
   * @brief Конструктор по умолчанию.
   *
   * Конструктор инициализирует путь к файлу лога пустой строкой.
   */
  Logger() { pathLogFile = " "; };

  /**
   * @brief Конструктор с заданным путем к файлу лога.
   *
   * Этот конструктор инициализирует путь к файлу лога заданной строкой.
   *
   * @param s Путь к файлу лога.
   */
  Logger(string s) { pathLogFile = s; };
};
